body {
    background: rgba(0, 0, 0, 0.01);
    font-family: Verdana, sans-serif;
}

.container {
    width: 960px;
    margin: 0 auto;
    font-size: 100%;
    line-height: 1.5
}
/* 
20 + 0 + 0 + w + 0 + 0 + 10 = 30 (red paint) 
+
10 + 0 + 0 + w + 0 + 0 + 20 = 30 (blue paint)
=
960

60 + 2w = 960 
w = ((960 - 60)/2) 
w = 450*/
.red-paint, .blue-paint{
    width: 450px;
    height: 300px;
}

.red-paint{
    background-color: red;
    margin: 20px 10px 20px 20px; 
}
/* margin order = top (N), right (E), bottom (S), left (W) */

.blue-paint{
    background-color: blue;
    margin: 20px 20px 20px 10px;
}

.black-paint{
    /* 20 + 0 + 0 + w + 0 + 0 + 20 = 960 
    40 + w = 960
    w = 960 - 40 = 920*/
    width: 920px;
    margin: 0px 20px 20px; /*top/bottom to right/left */
    height: 50px;
    background-color: black;
}

main, footer{
    background-color: #C0C0C0;
}
/* create a flex-container that surrounds all the child elements
you want to be displayed in a column fashion (floating L to R)

"flex" is the red and blue element (div)
parent is the next level up -> main

add the rule display: flex; to the element name

problem: flex will place all child elements on a single row, adjusting all widths automatically
solution: retain the width setting and force an overflow on the horizontal axis (main axis) to go to the next line  (row)
rule: flex-wrap: nowrap (default) | wrap | wrap-reverse*/

main, footer{
    display: flex;
    flex-wrap:wrap
}